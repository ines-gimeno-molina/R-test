name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        
      - name: Install dependencies
        run: Rscript -e 'install.packages(c("devtools"))'
        
      - name: Run tests
        run: Rscript -e "devtools::test(stop_on_failure = TRUE)"
        
  coverage:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        
      - name: Install dependencies
        run: Rscript -e 'install.packages(c("covr"))'
        
      - name: Generate coverage report
        run: |
          mkdir covr
          Rscript -e 'covr::gitlab(file = "covr/rdocx-coverage.html", quiet = FALSE)'
        
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: covr
          
  documentation:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        
      - name: Install dependencies
        run: Rscript -e 'install.packages(c("roxygen2", "pkgdown"))'
        
      - name: Build documentation
        run: R -e 'roxygen2::roxygenize();pkgdown::build_site()'
        
      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs
          
  deploy:
    needs: documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Copy documentation to public
        run: |
          mkdir .public
          cp -r docs/* .public
          mv .public public
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
